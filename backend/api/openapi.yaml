#
# CSE183 Assignment 9 Backend
#

openapi: '3.0.3'

info:
  description: CSE183 Assignment 9 Backend
  version: 0.1.0
  title: CSE183 Assignment 9 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  # /dummy:
  #   get:
  #     description: Dummy Endpoint
  #     responses:
  #       200:
  #         description: Succesful
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/DummyResponse'
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  /mailbox/summary:
    get:
      description: "Get list of all mailboxes and the number of emails in them. Includes 'starred' pseudobox."
      responses:
        200:
          description: "All good"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MailboxSummary"
  /mailbox/{id}:
    get:
      description: "Get list of all emails in mailbox."
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "ID of mailbox to get"
      responses:
        200:
          description: "All good"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmailSummary"
        404:
          description: "Mailbox does not exist"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /mailbox/:
    post:
      description: "Create new mailbox."
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
          description: "Name of mailbox to create"
      responses:
        201:
          description: "Created"
        409:
          description: "Mailbox already exists"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /mail/{id}:
    get:
      description: "Get full email by id."
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "ID of email to get"
      responses:
        200:
          description: "All good"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailFull"
        404:
          description: "Email does not exist"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    MailboxSummary:
      additionalProperties: false
      required:
        - "name"
        - "size"
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        size:
          type: number
          format: int32
    Mailbox:
      additionalProperties: false
      required:
        - "name"
        - "size"
        - "mail"
      properties:
        name:
          type: string
        size:
          type: number
          format: int32
        mail:
          type: array
          items:
            $ref: "#/components/schemas/EmailFull"
    User:
      additionalProperties: false
      required:
        # - "id"
        - "name"
        - "email"
      properties:
        id:
          type: string
          format: uuid
        avatar:
          type: string
          format: uri
        name:
          type: string
        email:
          type: string
          format: email
    EmailSummary:
      additionalProperties: false
      required:
        - "id"
        - "to"
        - "from"
        - "subject"
        - "sent"
        - "received"
        - "starred"
      properties:
        id:
          type: string
          format: uuid
        to:
          $ref: '#/components/schemas/User'
        from:
          $ref: '#/components/schemas/User'
        subject:
          type: string
        starred:
          type: boolean
        sent:
          type: string
          format: date-time
        received:
          type: string
          format: date-time
    EmailFull:
      additionalProperties: false
      required:
        - "id"
        - "to"
        - "from"
        - "subject"
        - "content"
        - "sent"
        - "starred"
        - "received"
      properties:
        id:
          type: string
          format: uuid
        to:
          $ref: '#/components/schemas/User'
        from:
          $ref: '#/components/schemas/User'
        subject:
          type: string
        content: 
          type: string
        sent:
          type: string
          format: date-time
        received:
          type: string
          format: date-time
        starred:
          type: boolean



    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    DummyResponse:
      required:
        - message
      properties:
        message:
          type: string